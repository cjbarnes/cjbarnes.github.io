/* ==========================================================================
   Figure styles

   Includes special block-level tags e.g. blockquote, pre, address.

   @version 1.0.0
   @package cjbarnes.github.io
   ========================================================================== */

figure {
/*** Basic figure.
 ***/
    @include rem("margin", $line 0);
    @include rem("padding", ($line / 2) 0);
    background: $background-color-figure;

    &:last-child {
        /* Get rid of bottom spacing when this is the last element in the
         * content. */
        margin-bottom: 0;
    }

}

figcaption {
/*** Captions.
 ***/
    @include rem("margin", $line $gutter 0);
}


/* Figure types.
   ========================================================================== */

figure.link {
/*** Link figures.
 ***/
    padding: 0 !important;
    background: $background-color-link;

    a {
    /*** The actual link inside the figure.
     ***/
        @include rem("padding", $line);
        @include font-size-leading("larger", 1.5);
        display: block;
        color: $link-color;

        &:hover,
        &:focus {
            color: $text-color-reversed;
            background: $link-color;
            border-color: $link-color;
        }

        &:active {
            color: $text-color-reversed;
            background: $link-color-active;
            border-color: $link-color-active;
        }

    }

}

figure.quote {
/*** Quote figures.
 ***/
    background: $background-color-quote;

    blockquote {
        margin-top: 0;
        margin-bottom: 0;

    }

    cite {
        /* Make italicization of quote citations an explicit choice, so we can
         * use italics for publications but not for people. */
        font-style: normal;
    }

    figcaption:before,
    cite:before {
    /*** Citation marker.
     ***/
        content: "â€”";
    }

}

figure.code {
/*** Codeblocks.
 ***/
    /* Same padding all around. */
    @include rem("padding-left", ($line / 2));
    @include rem("padding-right", ($line / 2));
    color: $text-color-reversed;
    background: $background-color-code;

    &:before {
        /* The icon is applied to the code element, not the figure, so we can
         * use the code's language class to style the icon. */
        display: none;
    }

    .content-section & {
        /* Padding-top is applied to the code element, not the figure, so that
         * the language icon is positioned correctly. */
        padding-top: 0;
    }

    code {
        @include circle-box;
        @include rem("padding-top", ($line * 1.5));
        display: block;
        color: inherit;
        background: transparent;

        &:before {
        /*** Icon colours and fonts.
         ***/
            @include font-size("huger");
            font-family: $font-family-icons;
            color: $text-color-reversed;
            background-color: $background-color-code;
        }

        // Icon colours.
        @each $language, $color in $language-colors {
            &.language-#{$language}:before {
                background-color: $color;
            }
        }

    }

    &.jquery code:before {
    /*** Override JavaScript icon with jQuery when figure has .jquery class.
     ***/
        content: map-get($language-icons, "jquery");
        background-color: map-get($language-colors, "jquery");
    }

    code,
    pre {
        @include font-size-leading( "smaller", 0.666667 );
        margin: 0;
        overflow: visible;
    }

    + figure.code {
    /*** Hairline space between codeblocks.
     ***/
        @include rem("margin-top", ($line * -1));
        border-top: 1px solid $background-color-content;
    }

}

figure.output {
/*** Codeblock output areas.
 ***/
    background: #fff;

    > :first-child {
        margin-top: 0;
    }

    + figure.code,
    figure.code + & {
        /* No spacing between code and output figures. */
        @include rem("margin-top", ($line * -1));
    }

    + figure.code code:before {
    /*** Match icon color/border to background.
     ***/
        border-color: #fff;
        color: #fff;
    }

}

.content-section figure {
/*** Figures on single-article pages.
 ***/
    @include rem("margin", ($line * 2) 0 $line);
    @include rem("padding-top",    ($line * 1.5));
    @include rem("padding-bottom", ($line * 1.5));

    &.link,
    &.quote {
    /*** Icon layout.
     ***/
        @include circle-box;

        &:before {
            font-family: $font-family-icons;
        }

    }

    // Icon content and colours.
    @each $figure, $color in $figure-colors {
        &.#{$figure}:before {
            content: map-get($figure-icons, $figure);
            background-color: $color;
        }
    }

}


/* Media queries.
   ========================================================================== */

@include media-width("normal-size") {
/*** Media query: Tablets or wider.
 ***/
    figcaption,
    blockquote {
        /* Leave more margin around text. */
        @include push;
        @include pull;

        .listing-content & {
            margin-left: 0;
            margin-right: 0;
        }

    }

}
